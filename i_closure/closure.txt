클로저(closure, 폐쇄) : 함수 안에 함수, 모듈화
    함수가 정의된 시점의 변수(#지역변수)를 기억하고, 이 변수를 나중에 참조 혹은 가능하도록 해준다. # 지역변수가 메모리상 전역변수와 다를게 없어짐.
    내부 영역에 선언된 변수(#지역변수)는 외부에서 접근이 불가능하기 때문에 데이터 은닉을 할 수 있으며, # 은닉화, 캡슐화라고 한다.
    함수가 종료된 이후에도 지역변수에 접근할 수 있기 때문에 데이터 지속성을 가지고 있다.
    또한 다른 함수를 인자로 받거나 리턴할 수 있는 함수형 프로그래밍이 가능해진다. # 함수를 값처럼 쓸 수 있다.
    하지만 코드 복잡성이 증가하고 지역변수를 메모리에 유지하기 때문에 메모리 사용량이 증가될 수 있다.

클로저 구현 코드
    def out(arg):
        local_variable = value #지역변수 선언

        def in(arg):
            #read local_variable #지역변수 선언한것을 가져다 쓸 수 있음
            value = operate somthing

            return value

        return in # in함수를 out 함수에서도 사용할 수 있도록 return 해줘야한다


